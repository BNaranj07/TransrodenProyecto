@model TransrodenProyecto.Models.Facturacion

<h2>Generar Factura</h2>

@using (Html.BeginForm("GenerarFactura", "Facturacions", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Id_Paquete, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Id_Paquete, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NombreEmisor, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.NombreEmisor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CedulaEmisor, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.CedulaEmisor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Id_Usuario, htmlAttributes: new { @class = "control-label" })
        <div>
            <input type="text" class="form-control" value="@(Model.Id_Usuario != null ? Model.Id_Usuario.ToString() : "No Asociado")" readonly />
            <!-- Para enviar el valor de Id_Usuario -->
            @Html.HiddenFor(model => model.Id_Usuario)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label" })
        <div>
            <input type="text" class="form-control" value="@(Model.Cantidad != null ? Model.Cantidad.ToString() : "No Asociado")" readonly />
            <!-- Para enviar el valor de Id_Usuario -->
            @Html.HiddenFor(model => model.Cantidad)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", @id = "precio" } })
            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Iva, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Iva, new { htmlAttributes = new { @class = "form-control", @id = "iva" } })
            @Html.ValidationMessageFor(model => model.Iva, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @id = "total" } })
            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label" })
        <div>
            @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", type = "date" } })
            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Generar Factura</button>
}


<script>
    document.getElementById('precio').addEventListener('input', function () {
        var precio = parseFloat(this.value) || 0;
        var iva = precio * 0.13;
        var total = precio + iva;

        document.getElementById('iva').value = iva.toFixed(2);

        document.getElementById('total').value = total.toFixed(2);
    });
</script>