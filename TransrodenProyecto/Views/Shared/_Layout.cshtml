<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Mi aplicación ASP.NET</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark">
        <div class="container">
            @Html.ActionLink("Nombre de la aplicación", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Alternar navegación" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li>@Html.ActionLink("Inicio", "Index", "Home", new { area = "" }, new { @class = "nav-link" })</li>
                    <li>@Html.ActionLink("Acerca de", "About", "Home", new { area = "" }, new { @class = "nav-link" })</li>
                    <li>@Html.ActionLink("Contacto", "Contact", "Home", new { area = "" }, new { @class = "nav-link" })</li>
                    <li>@Html.ActionLink("Cerra Sesion", "Logout", "Cuenta", new { area = "" }, new { @class = "nav-link" })</li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Mi aplicación ASP.NET</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)


    <script>
    // Tiempo de inactividad en milisegundos (1 minuto)
    var idleTime = 0;
    var idleLimit = 60; // 1 minuto en segundos

    // Incrementar el tiempo de inactividad cada segundo
    var idleInterval = setInterval(timerIncrement, 1000); // 1 segundo

    // Función para incrementar el tiempo de inactividad
    function timerIncrement() {
        idleTime++;
        if (idleTime >= idleLimit) {
            // Redirigir al logout
            window.location.href = '@Url.Action("Logout", "Cuenta")';
        }
    }

    // Función para reiniciar el tiempo de inactividad
    function resetIdleTime() {
        idleTime = 0;
    }

    // Eventos que reinician el contador de inactividad, pero excluyendo inputs
    window.onload = resetIdleTime;
    document.onmousemove = resetIdleTime;
    document.onkeypress = resetIdleTime;
    document.onscroll = resetIdleTime;
    document.onclick = resetIdleTime;

    // Añadir eventos a todos los inputs
    const inputs = document.querySelectorAll('input, textarea');
    inputs.forEach(input => {
        input.onfocus = resetIdleTime; // Reinicia el contador cuando se enfoca un campo de entrada
    });
    </script>


</body>


</html>



